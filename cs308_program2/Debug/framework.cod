; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\brann\Documents\program2\cs308_program2\framework.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_getInput
EXTRN	_strcpy:PROC
EXTRN	__imp__gets:PROC
EXTRN	__imp__puts:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\brann\documents\program2\cs308_program2\framework.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _getInput
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_inputPrompt$ = 8					; size = 4
_result$ = 12						; size = 4
_maxChars$ = 16						; size = 4
_getInput PROC						; COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 16   : 	char *temp = (char *) malloc(maxChars * sizeof(char));

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 10	 mov	 eax, DWORD PTR _maxChars$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	89 45 f8	 mov	 DWORD PTR _temp$[ebp], eax

; 17   : 	puts(inputPrompt);

  00037	8b f4		 mov	 esi, esp
  00039	8b 45 08	 mov	 eax, DWORD PTR _inputPrompt$[ebp]
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__puts
  00043	83 c4 04	 add	 esp, 4
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 18   : 	gets(temp);

  0004d	8b f4		 mov	 esi, esp
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _temp$[ebp]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__gets
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 19   : 	temp[maxChars - 1] = '\0';

  00063	8b 45 f8	 mov	 eax, DWORD PTR _temp$[ebp]
  00066	03 45 10	 add	 eax, DWORD PTR _maxChars$[ebp]
  00069	c6 40 ff 00	 mov	 BYTE PTR [eax-1], 0

; 20   : 	strcpy(result, temp);

  0006d	8b 45 f8	 mov	 eax, DWORD PTR _temp$[ebp]
  00070	50		 push	 eax
  00071	8b 4d 0c	 mov	 ecx, DWORD PTR _result$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _strcpy
  0007a	83 c4 08	 add	 esp, 8

; 21   : 	return;
; 22   : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00086	3b ec		 cmp	 ebp, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
_getInput ENDP
_TEXT	ENDS
PUBLIC	_showOutput
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _showOutput
_TEXT	SEGMENT
_outputLabel$ = 8					; size = 4
_outputString$ = 12					; size = 4
_showOutput PROC					; COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 28   : 	puts(outputLabel);

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 08	 mov	 eax, DWORD PTR _outputLabel$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__puts
  0002a	83 c4 04	 add	 esp, 4
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 29   : 	puts(outputString);

  00034	8b f4		 mov	 esi, esp
  00036	8b 45 0c	 mov	 eax, DWORD PTR _outputString$[ebp]
  00039	50		 push	 eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__puts
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 30   : 	return;
; 31   : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
_showOutput ENDP
_TEXT	ENDS
PUBLIC	??_C@_07GPDNMNG@CONOUT$?$AA@			; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_06GDENEHCP@CONIN$?$AA@			; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	_WinMain@16
EXTRN	__imp__getchar:PROC
EXTRN	_MainProc:PROC
EXTRN	__imp__freopen:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__AllocConsole@0:PROC
;	COMDAT ??_C@_07GPDNMNG@CONOUT$?$AA@
CONST	SEGMENT
??_C@_07GPDNMNG@CONOUT$?$AA@ DB 'CONOUT$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GDENEHCP@CONIN$?$AA@
CONST	SEGMENT
??_C@_06GDENEHCP@CONIN$?$AA@ DB 'CONIN$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 39   : 	int r = 0;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _r$[ebp], 0

; 40   : 	AllocConsole();

  00025	8b f4		 mov	 esi, esp
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AllocConsole@0
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 41   : 	freopen("CONIN$" , "rb", stdin);

  00034	8b f4		 mov	 esi, esp
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b f4		 mov	 esi, esp
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb?$AA@
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_06GDENEHCP@CONIN$?$AA@
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__freopen
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 42   : 	freopen("CONOUT$" , "wb", stdout);

  00060	8b f4		 mov	 esi, esp
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	83 c0 20	 add	 eax, 32			; 00000020H
  00072	8b f4		 mov	 esi, esp
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLFBBN@wb?$AA@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_07GPDNMNG@CONOUT$?$AA@
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__freopen
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 43   : 
; 44   : 	r = MainProc();

  0008f	e8 00 00 00 00	 call	 _MainProc
  00094	89 45 f8	 mov	 DWORD PTR _r$[ebp], eax

; 45   : 	getchar();

  00097	8b f4		 mov	 esi, esp
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getchar
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 46   : }

  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
  000a9	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 10 00	 ret	 16			; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
END
